{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnikolov3\\\\Documents\\\\dxc.academy\\\\dxc-training\\\\my-react-app\\\\src\\\\components\\\\Book.js\";\nimport React from \"react\";\nimport noimage from \"../noimage.png\";\nimport Loading from \"./Loading\";\n\nclass Book extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: undefined\n    };\n  }\n\n  makeFetch(id) {\n    const url = \"https://www.googleapis.com/books/v1/volumes/\" + id;\n    fetch(url).then(response => response.json()).then(responseJson => this.setState({\n      book: responseJson\n    }));\n  }\n\n  render() {\n    const books = this.props.books;\n    const id = this.props.match.params.bookUrl;\n    console.log(id);\n    let book;\n\n    if (books.length === 0) {\n      if (this.state.book === undefined) {\n        this.makeFetch(id);\n      }\n\n      book = this.state.book;\n    } else {\n      book = books.filter(b => b.id === id)[0];\n    }\n\n    if (book === undefined) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    } else {\n      try {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: book.volumeInfo.imageLinks.thumbnail,\n          alt: noimage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Title: \", book.volumeInfo.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Pages: \", book.volumeInfo.pageCount)));\n      } catch (error) {\n        console.log(error);\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: noimage,\n          alt: noimage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Title: \", book.volumeInfo.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Pages: \", book.volumeInfo.pageCount)));\n      }\n    }\n  }\n\n}\n\nexport default Book;","map":{"version":3,"sources":["C:\\Users\\lnikolov3\\Documents\\dxc.academy\\dxc-training\\my-react-app\\src\\components\\Book.js"],"names":["React","noimage","Loading","Book","Component","constructor","props","state","book","undefined","makeFetch","id","url","fetch","then","response","json","responseJson","setState","render","books","match","params","bookUrl","console","log","length","filter","b","volumeInfo","imageLinks","thumbnail","title","pageCount","error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport noimage from \"../noimage.png\";\r\nimport Loading from \"./Loading\";\r\n\r\nclass Book extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      book: undefined\r\n    };\r\n  }\r\n\r\n  makeFetch(id) {\r\n    const url = \"https://www.googleapis.com/books/v1/volumes/\" + id;\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(responseJson => this.setState({ book: responseJson }));\r\n  }\r\n\r\n  render() {\r\n    const books = this.props.books;\r\n    const id = this.props.match.params.bookUrl;\r\n    console.log(id);\r\n    let book;\r\n    if (books.length === 0) {\r\n      if (this.state.book === undefined) {\r\n        this.makeFetch(id);\r\n      }\r\n      book = this.state.book;\r\n    } else {\r\n      book = books.filter(b => b.id === id)[0];\r\n    }\r\n    if (book === undefined) {\r\n      return <Loading />;\r\n    } else {\r\n      try {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <img src={book.volumeInfo.imageLinks.thumbnail} alt={noimage} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <p>Title: {book.volumeInfo.title}</p>\r\n              <p>Pages: {book.volumeInfo.pageCount}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <img src={noimage} alt={noimage} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <p>Title: {book.volumeInfo.title}</p>\r\n              <p>Pages: {book.volumeInfo.pageCount}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Book;\r\n"]},"metadata":{},"sourceType":"module"}